{"name":"Henchman","tagline":"Orchestration and Automation Tool.","body":"henchman [![Build Status](https://travis-ci.org/sudharsh/henchman.svg?branch=master)](https://travis-ci.org/sudharsh/henchman)\r\n========\r\n\r\nWhat\r\n----\r\nHenchman is an orchestration and automation tool, inspired by Ansible. Henchman executes a *plan* (a collection of *tasks*) on a given set of machines. \r\n\r\nWhy\r\n---\r\nFor fun :). Although, python and ruby are awesome as systems languages, I feel Golang fits this 'get shit done' niche more.\r\nDeployments of tools written in Golang are less painful which is a big win in large scale environments where we've had our share of incompatibilities with ruby and python dependencies. \r\n\r\n\r\nCurrent State\r\n-------------\r\nCurrently, `henchman` isn't even close to ansible in terms of functionality. For now, it dispatches shell commands on the given hosts and has rudimentary support for variables.\r\nThe immediate goals are to nail down the *plan* format and worry about the modules implementation next. Eventually, henchman modules can be written in any language as long as they output to `stdout`, just like ansible.\r\n\r\n\r\nBuilding\r\n--------\r\n* Clone this repository\r\n* `make all`\r\n* `bin/henchman -h`\r\n* Refer `samples/plan.yaml`\r\n\r\n\r\nContributing\r\n------------\r\nGithub PRs away!\r\n\r\n","google":"UA-45074307-2","note":"Don't delete this file! It's used internally to help with page regeneration."}